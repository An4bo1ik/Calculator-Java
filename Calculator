import java.io.IOException;
import java.util.Scanner;

public class Main{
    static char operator;
    static int firstResult;
    static String result;
    public static void main (String[] args) throws IOException {
        Scanner operation = new Scanner(System.in);
        System.out.println("Введите операцию:");
        String work = operation.nextLine();
        String result = calc(work);
        System.out.println(result);
    }

    public static String calc(String input) throws IOException {
        Scanner calculate = new Scanner(input);
        String[] operationInd = new String[4];
        operationInd[0] = "+";
        operationInd[1] = "-";
        operationInd[2] = "*";
        operationInd[3] = "/";

        String operation = calculate.nextLine().replaceAll(" ", "");

        int countOperations = 0;
        for (char element: operation.toCharArray()){
            if (element == '+') {
                countOperations++;
            }else if (element == '-') {
                countOperations++;
            }else if (element == '*') {
                countOperations++;
            }else if (element == '/') {
                countOperations++;
            }else{

            }
        }

        if (countOperations > 1){
            throw new IOException("Превышено максимальное число операндов!");
        } else if (countOperations == 0){
            throw new IOException("Некорректная арифметическая операция!");
        }

        int indexOfOperations = -1;
        for (int i = 0; i < operationInd.length; i++) {
            if(operationInd[i] == "+"){
                operator = '+';
            }else if(operationInd[i] == "-"){
                operator = '-';
            }else if(operationInd[i] == "*"){
                operator = '*';
            }else if(operationInd[i] == "/"){
                operator = '/';
            }

            if (operation.contains(operationInd[i])) {
                indexOfOperations = i;
                break;
            }
        }


        String[] opInd = new String[4];
        opInd[0] = "\\+";
        opInd[1] = "-";
        opInd[2] = "\\*";
        opInd[3] = "/";


        String[] res = operation.trim().split(opInd[indexOfOperations]);
        String a1 = res[0];
        String b1 = res[1];
        if (romanToArabian(res[0]) != -1 && romanToArabian(res[1]) != -1) {
            int a2 = romanToArabian(a1);
            int b2 = romanToArabian(b1);

            if (a2 < 0 && b2 < 0) {
                firstResult = 0;
            } else {
                firstResult = calculate(a2, b2, operator);
                result = converter(firstResult);
                return result;
            }
        }
        int a = Integer.parseInt(a1);
        int b = Integer.parseInt(b1);
        if ((a > 10 || a < 0) || (b > 10 || b < 0)){
            throw new IOException("Некорректное число (0 > i > 10)!");
        }
        result = Integer.toString(calculate(a, b, operator));
        //System.out.println(result);
        return result;
    }

    static String converter(int arabian){
        String[] roman = {"O", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII", "XIII", "XIV", "XV", "XVI", "XVII", "XVIII", "XIX", "XX",
                "XXI", "XXII", "XXIII", "XXIV", "XXV", "XXVI", "XXVII", "XXVIII", "XXIX", "XXX", "XXXI", "XXXII", "XXXIII", "XXXIV", "XXXV", "XXXVI", "XXXVII", "XXXVIII", "XXXIX", "XL",
                "XLI", "XLII", "XLIII", "XLIV", "XLV", "XLVI", "XLVII", "XLVIII", "XLIX", "L", "LI", "LII", "LIII", "LIV", "LV", "LVI", "LVII", "LVIII", "LIX", "LX",
                "LXI", "LXII", "LXIII", "LXIV", "LXV", "LXVI", "LXVII", "LXVIII", "LXIX", "LXX",
                "LXXI", "LXXII", "LXXIII", "LXXIV", "LXXV", "LXXVI", "LXXVII", "LXXVIII", "LXXIX", "LXXX",
                "LXXXI", "LXXXII", "LXXXIII", "LXXXIV", "LXXXV", "LXXXVI", "LXXXVII", "LXXXVIII", "LXXXIX", "XC",
                "XCI", "XCII", "XCIII", "XCIV", "XCV", "XCVI", "XCVII", "XCVIII", "XCIX", "C"};
        final String symbol = roman[arabian];
        return symbol;
    }

    static int romanToArabian(String roman) {
        if (roman.equals("0")) {
            return 0;
        } else if(roman.equals("I")) {
            return 1;
        } else if (roman.equals("II")) {
            return 2;
        } else if (roman.equals("III")) {
            return 3;
        } else if (roman.equals("IV")) {
            return 4;
        } else if (roman.equals("V")) {
            return 5;
        } else if (roman.equals("VI")) {
            return 6;
        } else if (roman.equals("VII")) {
            return 7;
        } else if (roman.equals("VIII")) {
            return 8;
        } else if (roman.equals("IX")) {
            return 9;
        } else if (roman.equals("X")) {
            return 10;
        }
        return -1;
    }


    static int calculate(int a, int b, char op) throws IOException {
        int result = 0;
        switch (op) {
            case '+':
                result = a + b;
                break;
            case '-':
                result = a - b;
                break;
            case '*':
                result = a * b;
                break;
            case '/':
                result = a / b;
                break;
            default:
                throw new IOException("Некорректная арифметическая операция!");
        }
        return result;
    }
}
